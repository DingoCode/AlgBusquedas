
NOV
18
Busqueda lineal en C++
Vamos a desarrollar el primer algoritmo de búsqueda. La busqueda lineal es bien simple, consiste en recorrer el arreglo secuencialmente hasta dar con la clave buscada y en ese punto devolver el índice. Entre sus ventajas podemos decir que es fácil de implementar y sirve para arreglos desordenados. Para arreglos más grandes veremos un método más efectivo (pero que requiere ordenar el arreglo), llamado busqueda binaria. El código cuenta con una función busquedaLineal, que recibe al arreglo, el tamaño, y la clave a buscar.

//Busqueda lineal //en un arreglo.
#include <iostream>
using std::cout;
using std::cin;
using std::endl;
void mostrarArreglo(const int[], int); //prototipo de funcion que
recibe un arreglo constante
int busquedaLineal(const int[], int, int); //arreglo, tamano, clave
int main()
{
  int clave =0;
  const int tamano = 15;
  int arreglo[tamano] = {25,17,13,16,41,32,12,115,95,84,54,63,78,21,10};
  cout << "Elementos del arreglo: " << endl;
  mostrarArreglo(arreglo,tamano);
  cout << "Indique un valor a buscar y se le devolvera el indice: " << endl;
  cin >> clave;
  cout<< "Su valor se encuentra en
arreglo["<<busquedaLineal(arreglo,tamano,clave)<<"]"<< endl;
  cout << "Fin del programa :)" << endl;
  return 0;
}//fin de main
void mostrarArreglo(const int arreglo[], int tamano)
{
  for (int i = 0 ; i < tamano ; i++)
    cout << "arreglo[" << i <<"]=" << arreglo[i] << endl;
}
int busquedaLineal(const int arreglo[], int tamano, int clave)
{
  for (int i = 0; i< tamano ; i++)
    if (arreglo[i] == clave)
      return i;
  return -1;
}
